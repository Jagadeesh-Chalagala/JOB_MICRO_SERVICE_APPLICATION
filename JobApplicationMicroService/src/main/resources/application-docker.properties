
jobapplication.url=http://job:8082
companyapplication.url=http://company:8081
reviewapplication.url=http://review:8083


server.port=8082
# h2-db
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update

# Postgresql
spring.datasource.url=jdbc:postgresql://postgres:5432/job_ms
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Eureka
#these are automatically configured with the respected values in springboot but this is for the idea you can comment the below three lines , even so the service will be registered to the below port 
eureka.client.serviceUrl.defaultZone=http://servicereg:8761/eureka/
eureka.client.register-with-eureka=true      
eureka.client.fetch-registry=true
# spring.application.name=JobApplication
#  spring.application.name=JobApplication  => comment it if the configserver is not optional and terminate the configserver service too

# Zipkin
management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
management.tracing.sampling.probability=1.0 

# config server

# this is helpful to get the urls names like keysels base url in first project
# spring.config.import=optional:configserver:http://localhost:8080
spring.config.import=configserver:http://configserver:8080
# this is to specifify whether to take props of dev,prod or stage
spring.profiles.active=dev


# Actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Resilience4J

# For Circuit Breaker
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.companyBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count-based

# For Retry
resilience4j.retry.instances.companyRetry.maxAttempts=5
resilience4j.retry.instances.companyRetry.wait-duration=2s

# For RateLimiter
#it sayd for every 4 seconds you are allowed to make only 2 requests without waiting(since timeout-dur=0)
resilience4j.ratelimiter.instances.companyRateLimiter.timeout-duration=0
resilience4j.ratelimiter.instances.companyRateLimiter.limit-refresh-period=4
resilience4j.ratelimiter.instances.companyRateLimiter.limit-for-period=2